version: "3.3"
services:
  zookeeper:
    image: zookeeper:3.6.1
#    ports:
#      - "2181:2181"

  hdfs:
    image: pravega/hdfs:2.7.7
#    ports:
#      - "2222:2222"
#      - "8020:8020"
#      - "50090:50090"
#      - "50010:50010"
#      - "50020:50020"
#      - "50075:50075"
#      - "50070:50070"
    environment:
      SSH_PORT: 2222
      HDFS_HOST: hdfs

  bookie1:
    image: pravega/bookkeeper
#    ports:
#      - "3181:3181"
    restart: always
    environment:
      ZK_URL: zookeeper:2181
      bookiePort: 3181
    links:
      - zookeeper

  bookie2:
      image: pravega/bookkeeper
#      ports:
#        - "3182:3182"
      restart: always
      environment:
        ZK_URL: zookeeper:2181
        bookiePort: 3182
      links:
        - zookeeper

  bookie3:
      image: pravega/bookkeeper
#      ports:
#        - "3183:3183"
      restart: always
      environment:
        ZK_URL: zookeeper:2181
        bookiePort: 3183
      links:
        - zookeeper

  controller:
    image: pravega/pravega
    ports:
      - "9090:9090"
#      - "10080:10080"
    command: controller
    environment:
      WAIT_FOR: zookeeper:2181
      ZK_URL: zookeeper:2181
      REST_SERVER_PORT: 10080
      JAVA_OPTS: |
        -Dcontroller.service.rpc.listener.port=9090
        -Xmx512m
        -XX:OnError="kill -9 p%"
        -XX:+ExitOnOutOfMemoryError
        -XX:+CrashOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
      SERVICE_HOST_IP: segmentstore
    links:
      - zookeeper
      - segmentstore

  segmentstore:
    image: pravega/pravega
    ports:
      - "12345:12345"
    command: segmentstore
    environment:
      WAIT_FOR: bookie1:3181,bookie2:3182,bookie3:3183,hdfs:8020
      TIER2_STORAGE: "HDFS"
      HDFS_REPLICATION: 1
      HDFS_URL: hdfs:8020
      ZK_URL: zookeeper:2181
      CONTROLLER_URL: tcp://controller:9090
      JAVA_OPTS: |
        -Dpravegaservice.service.published.host.nameOrIp=${HOST_IP}
        -Dbookkeeper.ensemble.size=2
        -Dbookkeeper.ack.quorum.size=2
        -Dbookkeeper.write.quorum.size=2
        -Xmx900m
        -XX:OnError="kill -9 p%"
        -XX:+ExitOnOutOfMemoryError
        -XX:+CrashOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
    links:
      - zookeeper
      - hdfs
      - bookie1
      - bookie2
      - bookie3

  influxdb:
    image: docker.io/influxdb:latest
    ports:
      - 8083:8083
      - 8086:8086
    #volumes:
    #  - ./data:/var/lib/influxdb
    restart: always
    environment:
      INFLUXDB_DB: demo
      INFLUXDB_HOST: influxdb
      INFLUXDB_PASSWORD: root
      INFLUXDB_USERNAME: root

  grafana:
    image: docker.io/grafana/grafana:latest
    restart: always
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
    volumes:
      - ./grafana/config/grafana-dashboard-provider.yaml:/etc/grafana/provisioning/dashboards/grafana-dashboard-provider.yaml
      - ./grafana/config/influxdb-datasource.yaml:/etc/grafana/provisioning/datasources/influxdb-datasource.yaml
      - ./grafana/config/dashboard.json:/var/lib/grafana/dashboards/dashboard.json      
    links:
      - influxdb
    depends_on:
      - influxdb